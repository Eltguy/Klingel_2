; Template für native Programmierung von AVR-MCUs in C,
; mittels USBasp-Programmer über SPI-Schittstelle

[env:ATmega328P]
platform = atmelavr
board = ATmega328P
;framework = arduino entfällt bei hier.
;die main.ccp händisch in main.c umbenennen!
 
board_build.f_cpu = 8000000L    ;Taktfrequenz
upload_protocol = custom        ;Nutzerspezifisches Protokoll
upload_flags = -B 8             ;enablen, wenn Takt auf 93750 Hz verringert werden soll

;ZUTREFFENDES MCU-FILE EXKLUSIV ENABLEN:
;upload_command = avrdude $UPLOAD_FLAGS -e -p  attiny13 -c usbasp -P usb -U flash:w:$SOURCE:i
;upload_command = avrdude $UPLOAD_FLAGS -e -p attiny85 -c usbasp -P usb -U flash:w:$SOURCE:i
;upload_command = avrdude $UPLOAD_FLAGS -e -p  atmega8 -c usbasp -P usb -U flash:w:$SOURCE:i
;upload_command = avrdude $UPLOAD_FLAGS -e -p atmega48 -c usbasp -P usb -U flash:w:$SOURCE:i
;upload_command = avrdude $UPLOAD_FLAGS -e -p  atmega88 -c usbasp -P usb -U flash:w:$SOURCE:i
;upload_command = avrdude $UPLOAD_FLAGS -e -p atmega88pa -c usbasp -P usb -U flash:w:$SOURCE:i
upload_command = avrdude $UPLOAD_FLAGS -e -p  atmega328p -c usbasp -P usb -U flash:w:$SOURCE:i 

;gegebenenfalls anpassen für serielle Ausgabe
monitor_port = COM7
monitor_speed = 9600